// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// arma_weighted_mean
double arma_weighted_mean(const arma::vec& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_weighted_mean(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_mean(x, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_running_mean
arma::vec arma_running_mean(const arma::vec& x);
RcppExport SEXP _diagis_arma_running_mean(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_running_mean(x));
    return rcpp_result_gen;
END_RCPP
}
// arma_running_weighted_mean
arma::vec arma_running_weighted_mean(const arma::vec& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_running_weighted_mean(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_running_weighted_mean(x, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_var
double arma_weighted_var(const arma::vec& x, const arma::vec& w, unsigned int ml);
RcppExport SEXP _diagis_arma_weighted_var(SEXP xSEXP, SEXP wSEXP, SEXP mlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type ml(mlSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_var(x, w, ml));
    return rcpp_result_gen;
END_RCPP
}
// arma_running_var
arma::vec arma_running_var(const arma::vec& x, unsigned int ml);
RcppExport SEXP _diagis_arma_running_var(SEXP xSEXP, SEXP mlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type ml(mlSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_running_var(x, ml));
    return rcpp_result_gen;
END_RCPP
}
// arma_running_weighted_var
arma::vec arma_running_weighted_var(const arma::vec& x, const arma::vec& w, unsigned int ml);
RcppExport SEXP _diagis_arma_running_weighted_var(SEXP xSEXP, SEXP wSEXP, SEXP mlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type ml(mlSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_running_weighted_var(x, w, ml));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_se
double arma_weighted_se(const arma::vec& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_weighted_se(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_se(x, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_mean_mat
arma::mat arma_weighted_mean_mat(const arma::cube& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_weighted_mean_mat(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_mean_mat(x, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_var_mat
arma::cube arma_weighted_var_mat(const arma::cube& x, const arma::vec& w, unsigned int ml);
RcppExport SEXP _diagis_arma_weighted_var_mat(SEXP xSEXP, SEXP wSEXP, SEXP mlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type ml(mlSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_var_mat(x, w, ml));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_mean_vec
arma::vec arma_weighted_mean_vec(const arma::mat& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_weighted_mean_vec(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_mean_vec(x, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_running_mean_vec
arma::mat arma_running_mean_vec(const arma::mat& x);
RcppExport SEXP _diagis_arma_running_mean_vec(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_running_mean_vec(x));
    return rcpp_result_gen;
END_RCPP
}
// arma_running_weighted_mean_vec
arma::mat arma_running_weighted_mean_vec(const arma::mat& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_running_weighted_mean_vec(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_running_weighted_mean_vec(x, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_var_vec
arma::mat arma_weighted_var_vec(arma::mat x, const arma::vec& w, unsigned int ml);
RcppExport SEXP _diagis_arma_weighted_var_vec(SEXP xSEXP, SEXP wSEXP, SEXP mlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type ml(mlSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_var_vec(x, w, ml));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_var_vec_t
arma::mat arma_weighted_var_vec_t(const arma::mat& x, const arma::vec& w, unsigned int ml);
RcppExport SEXP _diagis_arma_weighted_var_vec_t(SEXP xSEXP, SEXP wSEXP, SEXP mlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type ml(mlSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_var_vec_t(x, w, ml));
    return rcpp_result_gen;
END_RCPP
}
// arma_weighted_se_vec
arma::vec arma_weighted_se_vec(const arma::mat& x, const arma::vec& w);
RcppExport SEXP _diagis_arma_weighted_se_vec(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_weighted_se_vec(x, w));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_diagis_arma_weighted_mean", (DL_FUNC) &_diagis_arma_weighted_mean, 2},
    {"_diagis_arma_running_mean", (DL_FUNC) &_diagis_arma_running_mean, 1},
    {"_diagis_arma_running_weighted_mean", (DL_FUNC) &_diagis_arma_running_weighted_mean, 2},
    {"_diagis_arma_weighted_var", (DL_FUNC) &_diagis_arma_weighted_var, 3},
    {"_diagis_arma_running_var", (DL_FUNC) &_diagis_arma_running_var, 2},
    {"_diagis_arma_running_weighted_var", (DL_FUNC) &_diagis_arma_running_weighted_var, 3},
    {"_diagis_arma_weighted_se", (DL_FUNC) &_diagis_arma_weighted_se, 2},
    {"_diagis_arma_weighted_mean_mat", (DL_FUNC) &_diagis_arma_weighted_mean_mat, 2},
    {"_diagis_arma_weighted_var_mat", (DL_FUNC) &_diagis_arma_weighted_var_mat, 3},
    {"_diagis_arma_weighted_mean_vec", (DL_FUNC) &_diagis_arma_weighted_mean_vec, 2},
    {"_diagis_arma_running_mean_vec", (DL_FUNC) &_diagis_arma_running_mean_vec, 1},
    {"_diagis_arma_running_weighted_mean_vec", (DL_FUNC) &_diagis_arma_running_weighted_mean_vec, 2},
    {"_diagis_arma_weighted_var_vec", (DL_FUNC) &_diagis_arma_weighted_var_vec, 3},
    {"_diagis_arma_weighted_var_vec_t", (DL_FUNC) &_diagis_arma_weighted_var_vec_t, 3},
    {"_diagis_arma_weighted_se_vec", (DL_FUNC) &_diagis_arma_weighted_se_vec, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_diagis(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
